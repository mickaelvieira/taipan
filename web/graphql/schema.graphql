schema {
  query: Query
  mutation: Mutation
}

type Query {
  GetBookmark(url: String!): Bookmark
  GetLatestDocuments(offset: Int, limit: Int): DocumentCollection
  GetLatestBookmarks(offset: Int, limit: Int): BookmarkCollection
  Feeds(offset: Int, limit: Int): FeedCollection
}

type Mutation {
  Bookmark(url: String!): Bookmark
}

enum BookmarkStatus {
  FETCHED
  PENDING
  FETCHING
  FAILED
}

# https://www.apollographql.com/docs/graphql-tools/scalars

type DocumentCollection {
  offset: Int!
  total: Int!
  limit: Int!
  results: [Document]
}

type BookmarkCollection {
  offset: Int!
  total: Int!
  limit: Int!
  results: [Bookmark]
}

type FeedCollection {
  offset: Int!
  total: Int!
  limit: Int!
  results: [Feed]
}

interface Node {
  id: ID!
}

type Image {
  name: String!
  url: String!
  width: Int!
  height: Int!
  format: String!
}

type Document implements Node {
  id: ID!
  url: String!
  lang: String!
  charset: String!
  title: String!
  description: String!
  image: Image
  createdAt: String!
  updatedAt: String!
  feeds: [Feed]
}

type Bookmark implements Node {
  id: ID!
  url: String!
  lang: String!
  charset: String!
  title: String!
  description: String!
  image: Image
  updatedAt: String!
  addedAt: String!
  isRead: Boolean!
}

type Feed implements Node {
  id: ID!
  url: String!
  type: String!
  title: String!
  status: String!
  createdAt: String!
  updatedAt: String!
}
